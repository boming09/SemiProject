<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM
"http://java.sun.com/dtd/properties.dtd">
<properties>	
	<entry key="selectWProfile">
		SELECT
		       PRO_NO
		     , WRITER_NO
		     , FILE_PATH
		     , GREETING
		     , ORIGIN_FILE
		     , CHANGE_FILE
		  FROM W_PROFILE
		 WHERE WRITER_NO = ?
	</entry>
	
	<entry key="insertWProfile">
		INSERT INTO W_PROFILE
		(
		    PRO_NO
		  , WRITER_NO
		  , FILE_PATH
		  , GREETING
		  , ORIGIN_FILE
		  , CHANGE_FILE
		)
		VALUES
		(
		    SEQ_PRO_NO.NEXTVAL
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		)
	</entry>

	<entry key="updateWriterInfo">
		UPDATE MEMBER
		   SET USER_NAME = ?
		     , USER_EMAIL = ?
		     , USER_PHONE = ?
		     , USER_ADDRESS = ?
		 WHERE USER_NO = ?
	</entry>

	<entry key="updateWProfile">
		UPDATE W_PROFILE
		   SET FILE_PATH = ?
		     , ORIGIN_FILE = ?
		     , CHANGE_FILE = ?
		 WHERE WRITER_NO = ?
	</entry>
	
	<entry key="updateWProfileGreeting">
		UPDATE W_PROFILE
		   SET GREETING = ?
		 WHERE WRITER_NO = ?
	</entry>

	<entry key="selectMember">
		SELECT
				USER_NO
			  , USER_ID
			  , USER_PWD
			  , USER_NAME
			  , GENDER
			  , USER_EMAIL
			  , USER_PHONE
			  , USER_ADDRESS
			  , USER_GRADE
			  , ENROLL_DATE
			  , STATUS
			  , USER_CERTIFY
			  , USER_NICKNAME
	       FROM MEMBER
	      WHERE USER_NO = ?
	        AND STATUS = 'Y'
	</entry>
	
	<entry key="deleteInfo">
		UPDATE MEMBER
		   SET STATUS = 'N'
		 WHERE USER_NO = ?
	</entry>
	
	<entry key="getListCount">
		SELECT
		       COUNT(*)
		  FROM BOOK
		  JOIN W_BOOK USING(BOOK_ID)
		  JOIN WCHECK W USING(WCK_NO)
		 WHERE W.USER_NO = ?
		 ORDER BY BOOK_NAME
	</entry>
	
	<entry key="selectWBookList">
		SELECT *
		  FROM (SELECT ROWNUM RNUM, A.* 
		            FROM(SELECT
				               BOOK_ID
			                 , BOOK_NAME
			                 , PUBLICATION_DATE
			                 , PUBLISHER
			                 , BOOK_IMG 
			                 , COUNT(REVIEW_NO)
			              FROM BOOK B
			              JOIN W_BOOK USING(BOOK_ID)
			              JOIN WCHECK W USING(WCK_NO)
			              FULL OUTER JOIN B_REVIEW USING(BOOK_ID)
			             WHERE W.USER_NO = ?
			               AND REF_NO IS NULL
			             GROUP BY BOOK_ID, BOOK_NAME, PUBLICATION_DATE, PUBLISHER, BOOK_IMG
		             ORDER BY BOOK_NAME) A)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="getReviewCount">
		SELECT
		       COUNT(*)
		  FROM B_REVIEW R
		  JOIN BOOK B ON(B.BOOK_ID = R.BOOK_ID)
		  JOIN MEMBER M ON(M.USER_NO = R.USER_NO)
		  JOIN W_BOOK WB ON(WB.BOOK_ID = R.BOOK_ID)
		  JOIN WCHECK W ON(WB.WCK_NO = W.WCK_NO)
		 WHERE W.USER_NO = ?
		   AND REVIEW_NO NOT IN (SELECT R.REVIEW_NO
                    FROM B_REVIEW R
                    JOIN B_REVIEW RE ON(R.REVIEW_NO = RE.REF_NO))
		   AND REF_NO IS NULL
	</entry>
	
	<entry key="selectReviewList">
		SELECT *
		  FROM (SELECT ROWNUM RNUM, A.* 
		        FROM (SELECT
					       REVIEW_NO
					     , BOOK_ID
					     , BOOK_NAME
					     , R.USER_NO
					     , M.USER_ID
					     , R.CREATE_DATE
					     , R.CONTENT
					     , RATING
					     , REF_NO    
					     , R.STATUS
					  FROM B_REVIEW R
					  JOIN BOOK B ON(B.BOOK_ID = R.BOOK_ID)
					  JOIN MEMBER M ON(M.USER_NO = R.USER_NO)
					  JOIN W_BOOK WB ON(WB.BOOK_ID = R.BOOK_ID)
					  JOIN WCHECK W ON(WB.WCK_NO = W.WCK_NO)
					 WHERE W.USER_NO = ?
					  AND REVIEW_NO NOT IN (SELECT R.REVIEW_NO
						                      FROM B_REVIEW R
						                      JOIN B_REVIEW RE ON(R.REVIEW_NO = RE.REF_NO))
					  AND REF_NO IS NULL
					  AND R.STATUS = 'Y'
					 ORDER BY R.CREATE_DATE DESC, REVIEW_NO DESC) A)
			WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectReview">
		SELECT
		       REVIEW_NO
		     , BOOK_ID
		     , BOOK_NAME
		     , R.USER_NO
		     , M.USER_ID
		     , R.CREATE_DATE
		     , R.CONTENT
		     , RATING
		     , REF_NO    
		     , R.STATUS
		  FROM B_REVIEW R
		  JOIN BOOK B ON(B.BOOK_ID = R.BOOK_ID)
		  JOIN MEMBER M ON(M.USER_NO = R.USER_NO)
		  JOIN W_BOOK WB ON(WB.BOOK_ID = R.BOOK_ID)
		  JOIN WCHECK W ON(WB.WCK_NO = W.WCK_NO)
		 WHERE REVIEW_NO = ?
	</entry>
	
	<entry key="insertReply">
		INSERT INTO B_REVIEW
		(
		    REVIEW_NO
		  , BOOK_ID
		  , USER_NO
		  , CREATE_DATE
		  , CONTENT
		  , RATING
		  , REF_NO    
		  , STATUS
		)
		VALUES
		(
		    SEQ_REVIEW_NO.NEXTVAL
		  , ?
		  , ?
		  , SYSDATE
		  , ?
		  , DEFAULT
		  , ?
		  , DEFAULT
		)
	</entry>
	
</properties>
